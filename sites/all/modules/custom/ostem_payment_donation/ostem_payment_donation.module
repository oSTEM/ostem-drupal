<?php

/**
 * Implements hook_menu().
 */
function ostem_payment_donation_menu() {

	$items['admin/config/ostem'] = array(
		'title' => 'oSTEM Module Settings',
		'position' => 'left',
		'weight' => -100,
		'page callback' => 'system_admin_menu_block_page',
		'access arguments' => array('administer site configuration'),
		'file' => 'system.admin.inc',
		'file path' => drupal_get_path('module', 'system'),
	);

	$items['admin/config/ostem/ostem_payment_donation'] = array(
		'title' => 'Donation Form Settings',
		'description' => 'Manage settings for the oSTEM Donation Form.',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('ostem_payment_donation_admin'),
		'access arguments' => array('administer ostem_payment_donation settings'),
		'type' => MENU_NORMAL_ITEM,
	);

	return $items;
}

/**
 * Implements hook_permission().
 */
function ostem_payment_donation_permission() {
    return array(
      'administer ostem_payment_donation settings' => array(
        'title' => t('Administer oSTEM Payment Donation'),
        'description' => t('Configure the oSTEM Payment Donation mail and form settings.'),
      ),
    );
}

function ostem_payment_donation_admin() {
	$form = array();

	$button_text = variable_get('ostem_payment_donation_button_text', '');
	$mail_text = variable_get('ostem_payment_donation_mail_text', '');

    $form['ostem_payment_donation_button_text'] = array(
		'#type' => 'textfield',
		'#title' => t('Donation Submit Button Text'),
		'#default_value' => empty($button_text) ? '' : $button_text,
		'#description' => t("This is the text that will appear in the submit button on the donation form."),
	);
    
	$form['ostem_payment_donation_mail_text'] = array(
		'#type' => 'text_format',
		'#title' => t('Donation Success Email Message'),
        '#format' => 'full_html',
		'#default_value' => empty($mail_text['value']) ? '' : $mail_text['value'],
		'#description' => t("This email message will be sent to the donor upon successful completion of the donation payment."),
        '#element_validate' => array('token_element_validate'),
        '#token_types' => array('payment')
	);
    
    $form['token_help'] = array(
        '#theme' => 'token_tree_link',
        '#token_types' => array('payment'),
        '#global_types' => TRUE,
        '#click_insert' => TRUE
    );

	return system_settings_form($form);
}

/**
 * Implements hook_form_alter().
 */
function ostem_payment_donation_form_alter(&$form, &$form_state, $form_id) {
    if($form_id == 'payment_donation_form') {
        
        $form['amount']['#required'] = TRUE;
        
        $form = array_merge(array(
            'email_address' => array(
                '#type' => 'textfield',
                '#title' => t("Email Address"),
                '#description' => t("Your payment confirmation and receipt will be send this email address."),
                '#required' => TRUE,
            )
        ), $form);
        
        $button_text = variable_get('ostem_payment_donation_button_text', '');
        if(!empty($button_text))
            $form['pay']['#value'] = t($button_text);
        
        array_push($form['#validate'], 'ostem_payment_donation_form_validate');
    }
}

function ostem_payment_donation_form_validate(array $form, array &$form_state) {
    $email = $form_state['values']['email_address'];
    if (!valid_email_address($email)) {
        form_set_error('[submitted][email_address]', t('The email address appears to be invalid.'));
    }
    
    /** @var Payment $payment */
    $payment =& $form_state['payment'];
    $finish_callback = $payment->finish_callback;
    $payment->context_data['ostem_payment_donation_finish'] = $finish_callback;
    $payment->context_data['ostem_payment_donation_email'] = $email;
    $payment->finish_callback = 'ostem_payment_donation_finish';
}

function ostem_payment_donation_finish(Payment $payment) {
    if(payment_status_is_or_has_ancestor($payment->getStatus()->status, PAYMENT_STATUS_SUCCESS)) {
        
        $mail_text = variable_get('ostem_payment_donation_mail_text', '');
        if(empty($mail_text['value'])) return;
        
        $email_body = token_replace($mail_text['value'], array('payment' => $payment));
        $to = $payment->context_data['ostem_payment_donation_email'];
        $from = $from = variable_get('system_mail', 'oSTEM <info@ostem.org>');
        
        $module = 'ostem_payment_donation';
        $mail_token = microtime();
        
        $message = array(
            'id' => $module . '_' . $mail_token,
            'to' => $to,
            'subject' => "oSTEM Donation Confirmation",
            'body' => array($email_body),
            'headers' => array(
                'From' => $from,
                'Sender' => $from,
                'Return-Path' => $from
            )
        );
        
        $system = drupal_mail_system($module, $mail_token);
        $message = $system->format($message);
        if(!$system->mail($message)) {
            watchdog('', "Failed to send donation confirmation email. Payment ID: %pmid, Email: %email", array(
                '%pmid' => $payment->pid,
                '%email' => $to
            ), WATCHDOG_ERROR);
            drupal_set_message("Failed to send your donation confirmation email. Please contact info@ostem.org for a receipt.", 'error');
        }
    }
    
    call_user_func($payment->context_data['ostem_payment_donation_finish'], $payment);
}